plugins {
    id 'java'
    id 'application'
}

group = 'co.votingsystem'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation 'com.zeroc:ice:3.7.10'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// ❗️Clase principal por defecto (puedes dejar VoteClient u otra por defecto)
application {
    mainClass = 'client.vote.VoteClient'
}

// ✅ Task para ejecutar VoteClient
tasks.register('runVoteClient', JavaExec) {
    group = 'application'
    description = 'Ejecuta el cliente de votación'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('client.vote.VoteClient')
    args '--Ice.Config=config.vote'
}

// ✅ Task para ejecutar RegisterStationsClient
tasks.register('runRegisterStation', JavaExec) {
    group = 'application'
    description = 'Registra la estación de votación en el LoadBalancer'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('client.vote.RegisterStationsClient')
    args '--Ice.Config=config.vote'
}


tasks.register('copyVoteConfig', Copy) {
    from('src/main/resources/config.vote')
    into("$buildDir/generated-config")
}

tasks.register('runMultiVoteSimulator', JavaExec) {
    group = 'application'
    description = 'Ejecuta múltiples votos simulados'
    dependsOn 'copyVoteConfig'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('client.vote.MultiVoteSimulator')
    // Referencia al archivo en el nuevo destino seguro
    args "$buildDir/generated-config/config.vote", '5', '10'
}






